// Generated by CoffeeScript 2.3.1
(function() {
  var _, assert, sleep, start, test;

  assert = require('assert');

  _ = require('xza').lodash;

  ({test} = require('ava'));

  sleep = function(date, ms = 100) {
    return new Promise(function(resolve, reject) {
      return setTimeout(function() {
        return resolve(new Date() - date);
      }, ms);
    });
  };

  start = null;

  test.serial.before(function(t) {
    return start = new Date();
  });

  test('lodash', function(t) {
    return t.is(_.sizeof({
      a: 1
    }), '10 B');
  });

  test('test_1', async function(t) {
    var now;
    now = (await sleep(start));
    t.log(now);
    return t.pass();
  });

  test('test_2', async function(t) {
    var now;
    now = (await sleep(start));
    t.log(now);
    return t.pass();
  });

  test('test_3', async function(t) {
    var now;
    now = (await sleep(start));
    t.log(now);
    return t.pass();
  });

  test.serial('test_4', async function(t) {
    var now;
    now = (await sleep(start));
    t.log(now);
    return t.pass();
  });

  test.serial('test_5', async function(t) {
    var now;
    now = (await sleep(start, 500));
    t.log(now);
    return t.pass();
  });

  test.serial('test_6', async function(t) {
    var now;
    now = (await sleep(start, 1000));
    t.log(now);
    return t.pass();
  });

}).call(this);
